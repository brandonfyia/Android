package com.example.movieInfo;

import java.util.ArrayList;
import java.util.HashMap;

import org.json.JSONArray;
import org.json.JSONObject;

import services.WebServiceManager;

import com.example.java1week2_4.R;
import com.loopj.android.image.SmartImageView;

import android.app.Activity;
import android.app.Fragment;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.os.Messenger;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class MovieSearchFragment extends Fragment implements OnClickListener {
	
	
	EditText _searchField;
	TextView _header;
	TextView _titleTV;
	TextView _yearTV;
	TextView _mpaaTV;
	TextView _runtimeTV;
	TextView _criticsTV;
	SmartImageView _iView;
	TextView _infoTV;
	ProgressDialog _pDialog;

	@Override
	public void onAttach(Activity activity) {
		super.onAttach(activity);
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		
		View view = inflater.inflate(R.layout.movie_search, container);
		
		//Set Defaults for variables
		_searchField = (EditText) view.findViewById(R.id.searchField);
		_header = (TextView) view.findViewById(R.id.header);
		_titleTV = (TextView) view.findViewById(R.id.titleTV);
		_yearTV = (TextView) view.findViewById(R.id.yearTV);
		_mpaaTV = (TextView) view.findViewById(R.id.mpaaTV);
		_runtimeTV = (TextView) view.findViewById(R.id.runtimeTV);
		_criticsTV = (TextView) view.findViewById(R.id.criticsTV);
		_iView = (SmartImageView) view.findViewById(R.id.posterIV);
		_infoTV = (TextView) view.findViewById(R.id.infoTV);
		
		Button searchButton = (Button) view.findViewById(R.id.searchButton);
		searchButton.setOnClickListener(this);
		
		return view;
	}

	@Override
	public void onClick(View v) {
		
		Log.i("CLICK HANDLER", _searchField.getText().toString());

		// Progress bar
		_pDialog = new ProgressDialog(this);
		_pDialog.setMessage("Fetching data");
		_pDialog.setIndeterminate(true);
		_pDialog.setCancelable(false);
		_pDialog.show();

		// Clear out all text fields
		_titleTV.setText("");
		_yearTV.setText("");
		_mpaaTV.setText("");
		_runtimeTV.setText("");
		_criticsTV.setText("");
		_infoTV.setText("");
		_iView.setImageUrl(null);
		
		// Send text field entry to URL builder and request API
		// HTTP Service Handler
		Handler webHandler = new Handler() {
			@Override
			public void handleMessage(Message msg) {
				if (msg.arg1 == RESULT_OK && msg.obj != null) {
					try {
						_JSONString = (String) msg.obj;
						JSONObject resultJSON = new JSONObject(
								_JSONString);
						// Set data
						/*
						 * JSON Array is Movies. object 0 is the first
						 * result. get string provides the detail
						 * Object.
						 */
						if (resultJSON.getString("total").toString()
								.compareTo("0") == 0) {
							Toast toast = Toast.makeText(_context,
									"No movie by that name exists",
									Toast.LENGTH_LONG);
							toast.show();
							_header.setText("Try Again");
							// Close Progress Bar
							_pDialog.dismiss();
						} else {

							// Loop through a JSON Array and get Movie
							// Names
							ArrayList<HashMap<String, String>> movieList = new ArrayList<HashMap<String, String>>();
							JSONArray movies = resultJSON
									.getJSONArray("movies");
							int movieSize = movies.length();
							for (int i = 0; i < movieSize; i++) {
								JSONObject movieDetails = movies
										.getJSONObject(i);
								String title = movieDetails
										.getString(getString(
												R.string.titleAPI)
												.toString());

								HashMap<String, String> displayMap = new HashMap<String, String>();
								displayMap.put("TITLE", title);

								movieList.add(displayMap);
							}
							// Close Progress Bar
							_pDialog.dismiss();
							// Load Picker Activity
							Intent nextActivity = new Intent(_context,
									MoviePickerActivity.class);
							nextActivity.putExtra(
									"HEADER",
									"We found "
											+ String.valueOf(movieSize)
											+ " movies by that name. Select the one you wanted below.");
							nextActivity.putExtra("MOVIES", movieList);
							startActivityForResult(nextActivity, 0);

						}
					} catch (Exception e) {
						Log.e("HTTP HANDLER", e.getMessage().toString());
						e.printStackTrace();
						_header.setText("No info found. Please double check that the movie title was entered correctly");
						// Close Progress Bar
						_pDialog.dismiss();
					}
				}
			}

		};
		// HTTP Service Messenger
		Messenger webMessenger = new Messenger(webHandler);
		// HTTP Service Intent
		Intent getWebIntent = new Intent(_context,
				WebServiceManager.class);
		getWebIntent.putExtra(WebServiceManager.MESSENGER_KEY,
				webMessenger);
		getWebIntent.putExtra(WebServiceManager.MOVIE_KEY, _searchField
				.getText().toString());
		// Start service
		startService(getWebIntent);
		// Close keyboard
		InputMethodManager inputManager = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
		inputManager.hideSoftInputFromWindow(getCurrentFocus()
				.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);


		
	}

}
