/*
 * 
 */
package com.example.java1week2_4;

import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Iterator;

import org.json.JSONException;
import org.json.JSONObject;

import com.example.json.JSON;
import com.example.json.Movie;
import com.example.lib.FormThings;
import com.example.lib.WebStuff;

import android.os.AsyncTask;
import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.util.Log;
import android.view.Gravity;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;

/**
 * The Class MainActivity.
 */
public class MainActivity extends Activity {

	// Global variables
	Context _context;
	String[] _detailNames;
	RadioGroup _movieDetails;
	TextView _resultsView;
	int _i = 0;
	Boolean _connected = false;
	JSONObject _json;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		_context = this;

		// Define Layout
		LinearLayout ll = new LinearLayout(this);
		LayoutParams lp = new LayoutParams(LayoutParams.MATCH_PARENT,
				LayoutParams.MATCH_PARENT);
		ll.setLayoutParams(lp);
		ll.setOrientation(LinearLayout.VERTICAL);

		// Detect Network connection
		_connected = WebStuff.getConnectionStatus(_context);
		if (_connected) {
			Log.i("NETWORK CONNECTION", WebStuff.getConnectionType(_context));
		}

		// Build JSON
		getQuote("toy story");

		// Title
		TextView titleText = new TextView(this);
		titleText.setText("Movie Info");
		titleText.setGravity(Gravity.CENTER);
		titleText.setTextSize(30);
		ll.addView(titleText);

		// Define Radio Button Text
		_detailNames[0] = "title";
		_detailNames[1] = "year";
		_detailNames[2] = "mpaa_rating";
		_detailNames[3] = "runtime";
		_detailNames[4] = "critics_consensus";

		// Create Radio Group
		_movieDetails = FormThings.getOptions(this, _detailNames);
		ll.addView(_movieDetails);

		// Create info Button
		LinearLayout entryBox = FormThings.singleEntryWithButton(this,
				"Get Info");
		Button infoButton = (Button) entryBox.findViewById(2);
		infoButton.setGravity(Gravity.CENTER);
		ll.addView(entryBox);

		// On click for infoButton
		infoButton.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				// Get info from JSON
				int id = _movieDetails.getCheckedRadioButtonId();
				RadioButton rb = (RadioButton) findViewById(id);

				String selected = rb.getText().toString();

				_resultsView.setText(JSON.readJSON(_json, selected));

			}
		});

		// Create Results View
		_resultsView = new TextView(this);
		_resultsView.setLayoutParams(lp);
		_resultsView.setGravity(Gravity.CENTER);
		_resultsView.setText("Select to see movie details");
		ll.addView(_resultsView);

		// Set Content View
		setContentView(ll);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see android.app.Activity#onCreateOptionsMenu(android.view.Menu)
	 */
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	// Build URL
	private void getQuote(String movieName) {
		String baseURL = "http://api.rottentomatoes.com/api/public/v1.0/movies.json?apikey=zns9a4f2hfm94ju3unu4axzk&q=";
		String qs;
		try {
			qs = URLEncoder.encode(movieName, "UTF-8");
		} catch (Exception e) {
			// TODO: handle exception
			Log.e("BAD URL", "ENCODING PROBLEM");
			qs = "";
		}
		//Send URl to Async Task
		URL finalURL;
		try {
			finalURL = new URL(baseURL + qs + "&page_limit=1");
			QuoteRequest qr = new QuoteRequest();
			qr.execute(finalURL);
		} catch (MalformedURLException e) {
			Log.e("BAD URL", "MALFORMED URL");
			finalURL = null;
		}
	}
	
	//Send URL to web stuff to pull data
	private class QuoteRequest extends AsyncTask<URL, Void, String> {
		@Override
		protected String doInBackground(URL... urls) {
			String response = "";
			for (URL url : urls) {
				response = WebStuff.getURLStringResponse(url);
			}
			return response;
		}

		@Override
		protected void onPostExecute(String result) {
			try {
				//Set data
				_json = new JSONObject(result);
			} catch (JSONException e) {
				Log.e("JSON", "JSON OBJECT EXCEPTION");
			}
		}
	}

}
